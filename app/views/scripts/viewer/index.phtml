<?php echo $this->render("bootheader.phtml", true);?>
<script type='text/javascript' src='lib/jquery.timeago.js'></script>
<script type='text/javascript' src='lib/byte2size.js'></script>
<style>
#updates .toolbar {
position: relative;
margin-top: 0px;
top: -10px;
font-weight: normal;
}
#updates a.anchor {
position: relative;
top: -50px;
}
#updates .selected pre {
animation:selected 2s;
animation-iteration-count: 2;
animation-direction: alternate;
-webkit-animation:selected 2s; 
-webkit-animation-iteration-count: 2;
-webkit-animation-direction: alternate;
box-shadow: inset 1px 1px 20px #9ad;
border: 1px solid #9ab;
margin: 5px 0px;
padding-left: 10px;
}
@keyframes selected {
    from  {
        box-shadow: inset 1px 1px 20px #9ad;
        border: 1px solid #9ab;
    }
    to {
        box-shadow: inset 1px 1px 20px #05c;
        border: 1px solid #05c;
    }
}
@-webkit-keyframes selected {
    from  {
        box-shadow: inset 1px 1px 20px #9ad;
        border: 1px solid #9ad;
    }
    to {
        box-shadow: inset 1px 1px 20px #05c;
        border: 1px solid #05c;
    }
}
#updates pre {
background-color: inherit;
line-height: 15px;
padding: 5px;
}
#updates .header {
color: #999;
}
#updates .update_history pre {
background-color: #eee;
color: #666;
font-size: 85%;
}
#updates .clickable {
cursor: pointer;
}
#updates .clickable:hover {
color: #D98719;
}
#updates .meta_information pre {
background-color: #fed;
}
#similar_tickets {
max-height: 300px;
overflow-y: auto;
pointer-events: none;
padding: 5px;
background-color: #f4f4f4;
}
.btn-toolbar {
margin-bottom: 0;
height: 30px;
}
#peers {
position: fixed;
bottom: 0px;
right: 0px;
z-index: 100;
list-style: none;
padding: 5px 0px 0px 5px;
margin: 0px;
background-color: white;
box-shadow: 0px 0px 10px white;
}
#peers li {
background-color: #ccc;
color: #000;
display: inline-block;
padding: 5px 10px;
margin-right: 5px;
position: relative;
}
/*
#peers li:hover {
background-color: #999;
cursor: pointer;
}
*/
#peers span.ip {
padding-left: 5px;
color: #666;
}
#peers .new {
bottom: -30px;
}
/*
#peers .me {
background-color: red;
}
*/
</style>

<div class="container-fluid">
<ul id="peers"></ul>
<?php 

//wrap link content with <a href>
function replaceurl($text){
    $ex = "/(http|https|ftp|ftps|gsiftp|srm)(&#58;)\/\/[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,3}(&#58;[0-9]+)?([\/a-zA-Z0-9\-\._\?=#&%\*\+\|]*)?/";
    $text = preg_replace_callback($ex, function($matches) {
        $m = $matches[0];
        return "<a href='$m' target='_blank' rel='nofollow'>$m</a>";
    }, $text);
    return $text;
}

function replaceemail($text) { 
    $ex = "/([a-zA-Z0-9._+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4})/";
    $text = preg_replace_callback($ex, function($matches) {
        $m = $matches[0];
        if(user()->isGuest()) {
            /*
            //TODO - I can't reproduce the same c parameter used by recaptcha api
            //https://developers.google.com/recaptcha/old/docs/mailhideapi
            //$pubkey = "01jmhKT_RmNfwBNiETD_A8lg==";
            //$privatekey = "e578f9da586cbfbe63f909dffd8a2bf8";
            $pubkey = "01KVQ47h9-Col-AaCq8oi-FQ==";
            $privatekey = hextobin("deadbeefdeadbeefdeadbeefdeadbeef");
            $iv = hextobin("00000000000000000000000000000000");
            $ctext = mcrypt_encrypt(MCRYPT_RIJNDAEL_128, $privatekey, "x@example.com\x03\x03\x03", MCRYPT_MODE_CBC, $iv);
            $ctext = base64url_encode($ctext);
            $url = "http://www.google.com/recaptcha/mailhide/d?k=$pubkey&c=$ctext";
            return "some<a href='$url' onclick='window.open(\"$url\"); return false;'>...</a>@email.com";
            */
            return maskemail($m);
        } else {
            return "<a href='mailto:$m' target='_blank' rel='nofollow'>$m</a>";
        }
    }, $text);
    return $text;
}

/*
function base64url_encode($data) { 
  return strtr(base64_encode($data), '+/', '-_');
} 

function hextobin($hexstr) 
{ 
    $n = strlen($hexstr); 
    $sbin="";   
    $i=0; 
    while($i<$n) 
    {       
        $a =substr($hexstr,$i,2);           
        $c = pack("H*",$a); 
        if ($i==0){$sbin=$c;} 
        else {$sbin.=$c;} 
        $i+=2; 
    } 
    return $sbin; 
} 
*/

function maskemail($email) {
    if(preg_match('/^[^@]+@[a-zA-Z0-9._-]+\.[a-zA-Z]+$/', $email)) {
        $email = substr($email, 0, strpos($email, "@"))."@....";
    }
    return $email;
}

echo $this->alerts();
echo "<div id=\"presence\" class=\"pull-right\"></div>";
echo "<div class=\"ticketgui\">";

if($this->editable) {
    $suppression_control = true;
 
    include("app/views/scripts/ticket_editor.phtml");
    
   } else {

    include("app/views/scripts/ticket_viewer.phtml");
   
    }

echo "</div>";
?>

<div id="updates" style="clear: both;">
    <legend>Past Updates
    <div class="btn-toolbar pull-right toolbar">
        <div class="btn-group">
        <?php
        $sort_order = "down"; //default
        if(isset($_REQUEST["sort"])) {
            $sort_order = $_REQUEST["sort"];
        }
        if($sort_order == "down") {
            $flip_url = $this->updateurl(array("sort"=>"up"));
            $flip_button = "icon-arrow-up";
            krsort($this->descs, SORT_NUMERIC);
        } else {
            $flip_url = $this->updateurl(array("sort"=>"down"));
            $flip_button = "icon-arrow-down";
            ksort($this->descs, SORT_NUMERIC);
        }
        ?>
        <a class="btn btn-small" href="<?=$flip_url?>"><i class="<?=$flip_button?>"></i> Sort</a>

        <?php
        if($this->editable) {
            echo "<button class=\"btn btn-small\" onclick=\"submitspam(".$this->ticket_id.");\"><i class=\"\"></i> Mask as spam</button>";
        }
        ?>

        <?php
        $expand_all = false; 
        if(isset($_REQUEST["expandall"])) {
            if($_REQUEST["expandall"] == "true") {
                $expand_all = true;
            }
        }
        if(!$expand_all) {
            $expand_all_url = $this->updateurl(array("expandall"=>"true"));
            echo "<a class=\"btn btn-small\" href=\"$expand_all_url\">Expand Descriptions</a>";
        } else {
            $expand_all_url = $this->updateurl(array("expandall"=>"false"));
            echo "<a class=\"btn active btn-small\" href=\"$expand_all_url\">Expand All Descriptions</a>";
        }

        $subject = "Open Science Grid: $this->title ISSUE=$this->ticket_id PROJ=".config()->project_id;
        ?>
        <a class="btn btn-small" target="_blank" href="mailto:<?=config()->ticket_update_address?>?subject=<?=rawurlencode($subject)?>"><i class="icon-envelope"></i> Update w/Email</a>
        </div>
    </div><!--btn-toolbar-->
    </legend>

    <?php
    foreach($this->descs as $time=>$desc)
    {
        $by = $desc["by"];
        $content = trim($desc["content"]);
        $type = $desc["type"];

        //hide meta information if user doesn't have metatag access
        if(!user()->allows("view_meta")) {
            //hide it!
            $metapos = strpos($content, config()->metatag);
            if($metapos !== FALSE) {
                //has metainfo.. hide it
                $content = substr($content, 0, $metapos);
            }
        } else {
            //show it!
            $metapos = strpos($content, config()->metatag);
            if($metapos !== FALSE) {
                //has metainfo.. let's split the ticket into 2 parts
                $meta_information = substr($content, $metapos + strlen(config()->metatag));
                $content = substr($content, 0, $metapos);
            } else {
                $meta_information = null;
            }
        }

        $iso = date(DATE_W3C, $time);
        $timestr = date(config()->date_format_full, $time);
        $human_time = "<time datetime=\"$iso\">$timestr</time>";

        if($type == "history") {
            echo "<div class='update_history'>";
            echo "<pre>".Footprint::parse($content)."</pre>";
            echo "</div>";
        }
        
        if($type == "description") {
            if(user()->isGuest()) {
                $by = maskemail($by);
            }

            $anchor = $time;
            echo "<div class='update_description'>";
            echo "<i onclick=\"document.location='".$this->ticket_id."#$anchor'; reset_anchor();\" class=\"pull-right icon icon-share\"></i>";
            echo "<div class=\"header\">";
            echo "$human_time";
            if($by != "goc") {
                //this means update was made by fpuser:goc onbehalf of user who doesn't have footprints account
                echo " by <b>$by</b>";
            }
            echo "<a class=\"anchor\" name=\"$anchor\">&nbsp;</a>";
            echo "</div>";

            $content = replaceurl($content);
            $content = replaceemail($content);

            $lines_raw = explode("\n", $content);
            $lines = array();
            foreach($lines_raw as $line) {
                $line = trim($line);
                if(strpos($line, "&#62;") === 0) {
                    $line = "<font color='#7F7E6F'>$line</font>";
                }
                $lines[] = $line;
            }
            $content = trim(implode("\n", $lines));
            if(!isset($_REQUEST["expandall"]) && count($lines) > config()->description_showlines) {
                $i = 0;
                echo "<pre>";
                for(;$i < config()->description_showlines; $i++) {
                    echo $lines[$i]."\n";
                }
                //and toggle the rest..
                $out = "";
                for(;$i < count($lines);$i++) {
                    $out .= $lines[$i]."\n";
                }
                echo outputToggle("<button class=\"btn\">Show More</button>", "", $out);
                echo "</pre>";

            } else {
                //display all at once.
                echo "<pre>$content</pre>";
            }
            echo "</div>";//update_description
        }

        //meta information
        if(!empty($meta_information)) {
            echo "<div class=\"meta_information\">";
            $out = "<pre>$meta_information</pre>";
            echo $out;
            echo "</div>";
        }
    }

    echo "<legend>Similar Recent Tickets <small>modified within the last 30 days</small></legend>";
    echo "<div id=\"similar_tickets\">";
    if(isset($this->similar_tickets) && count($this->similar_tickets) > 0) { 
        foreach($this->similar_tickets as $ticket) {
            echo "<a href=\"".$ticket->id."\"><b>".$ticket->id."</b> ".$ticket->title." (".$ticket->status.")</a><p>".$ticket->desc."</p>";
        }
    } else {
        echo "<p class=\"muted\">No similar tickets found.</p>";
    }
    echo "</div>";

?>

</div>
<script type="text/javascript">
function reset_anchor() {
    $("#updates .selected").removeClass("selected");
    var urls = document.location.toString().split('#'); 
    var anchor = urls[1];
    if(anchor) {
        $("a[name='"+anchor+"']").parents(".update_description").addClass("selected");
    }
}
function submitspam(ticket_id) {
    myret = confirm("Would you like to close this ticket as a security ticket, and submit the ticket content to akismet?");
    if(myret == true) {
        $.ajax("viewer/processspam?id="+ticket_id).done(function() {
            window.location.reload();
        });
    }
}

$(function() {
    reset_anchor();
    var ADDITIONAL_COOKIE_NAME = 'gocticket';
    var options = { path: '/', expires: 365};

    if(window.opener && window.opener.name == "gocticket_list") {
        v = $.cookie("closewindow");
        if(!v) {
            $("#closewindow").attr("checked", "checked"); //on by default
        } else {
            if(v == "checked") {
                $("#closewindow").attr("checked", "checked");
            }
        }
        $("#closewindow").click(function() {
            $.cookie("closewindow", $(this).attr('checked'), options);
        });
    } else {
        $("#closewindow_area").hide();
    }
    function updateTimeago() {
        $("time").timeago();
        setTimeout(updateTimeago, 30*1000);
    }
    updateTimeago();
    $(".description").focus(expand_description);
});
</script>
<?php echo $this->render("pagefooter.phtml", true);?>
</div><!--container-fluid-->
<script src="<?php echo config()->chatjs_url?>/socket.io/socket.io.js"></script>
<script>
var chat = io.connect('<?php echo config()->chatjs_url?>');
chat.on('connect', function() {
    chat.emit('authenticate', {nodekey:'<?php echo $this->nodekey?>', ticketid: <?php echo $this->ticket_id?>});
});
chat.on('peers', function(peers) {
    $("#peers").html("");
    for(var pid in peers) {
        var peer = peers[pid];
        addPeer(pid, peer);
    }
});
chat.on('peer_disconnect', function(pid) {
    $("#peer_"+pid).hide("slow");
});
chat.on('peer_connected', function(peers) {
    //expect only 1 peer connecting, but..
    for(var pid in peers) {
        var peer = peers[pid];
        addPeer(pid, peer);
    }
});
chat.on('submit', function() {
    if(confirm("This ticket was updated. Do you want to refresh?")) {
        history.go(0);
    }
});

function addPeer(pid, peer) {
    var ipinfo = "";
    if(peer.ip != undefined) {
        ipinfo = "<span class=\"ip\">"+peer.ip+"</span>";
    }
    if(chat.io.engine.id == pid) {
        //don't display myself
        return;
    }
    var html = "<li class=\"new\" id=\"peer_"+pid+"\" class=\"peer\">"+peer.name+ipinfo+"</li>";
    $("#peers").prepend(html);
    $("#peers .new").animate({bottom: 0}, 1000, function() {$(this).removeClass("new")});
}

$(function() {
    $("#ticket_form").submit(function() {
        chat.emit('submit');
        return true;
    });
});
</script>
<?php echo $this->render("bootfooter.phtml", true);?>
